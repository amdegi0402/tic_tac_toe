{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/anet/nextApp-2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/home/anet/nextApp-2/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/anet/nextApp-2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/anet/nextApp-2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anet/nextApp-2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/anet/nextApp-2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/anet/nextApp-2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anet/nextApp-2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/anet/nextApp-2/componets/Game.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Board from './Board.js';\nimport style from '../static/Style';\n\nvar _default = /*#__PURE__*/function (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  var _super = _createSuper(_default);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true,\n      stepNumber: 0\n    };\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"handleClick\",\n    value: function () {\n      var _handleClick = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(i) {\n        var squares, history, all_history;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                squares = this.getCurrentBoard();\n\n                if (!(this.caluculateWinner(squares) || squares[i])) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                squares[i] = this.state.xIsNext ? 'X' : 'O';\n                history = this.state.history.slice(0, this.state.stepNumber + 1);\n                all_history = history.concat([{\n                  squares: squares\n                }]);\n\n                if (all_history.length === 3) {\n                  all_history.shift();\n                }\n\n                _context.next = 9;\n                return this.setState({\n                  history: all_history,\n                  stepNumber: all_history.length - 1,\n                  xIsNext: !this.state.xIsNext\n                });\n\n              case 9:\n                this.comAction(squares);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleClick(_x) {\n        return _handleClick.apply(this, arguments);\n      }\n\n      return handleClick;\n    }() //盤面\n\n  }, {\n    key: \"getCurrentBoard\",\n    value: function getCurrentBoard() {\n      var history = this.state.history.slice(0, this.state.stepNumber + 1);\n      var current = history[history.length - 1];\n      var squares = current.squares.slice();\n      return squares;\n    }\n  }, {\n    key: \"calculateWinner\",\n    value: function calculateWinner(squares) {\n      var lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n      for (var i = 0; i < lines.length; i++) {\n        var _lines$i = _slicedToArray(lines[i], 3),\n            a = _lines$i[0],\n            b = _lines$i[1],\n            c = _lines$i[2];\n\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n          return squares[a];\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"jumpTo\",\n    value: function jumpTo(step) {\n      var xIsNext = step !== this.state.stepNumber ? !this.state.xIsNext : this.state.xIsNext;\n      this.setState({\n        stepNumber: step,\n        xIsNext: xIsNext\n      });\n    } //com action\n\n  }, {\n    key: \"comAction\",\n    value: function comAction(squares) {\n      if (this.calculateWinner(squares)) return;\n      var history = this.state.history.slice(0, this.state.stepNumber + 1); //空いているマスを取得\n\n      var possible_hands = [];\n      var hand = squares.indexOf(null);\n\n      while (hand !== -1) {\n        possible_hands.push(hand);\n        hand = squares.indexOf(null, hand + 1);\n      } //空いているマスがなければ終了\n\n\n      if (possible_hands.length === 0) return; //空いているマスのうちランダムで1マス取得\n\n      var action_hand = possible_hands[Math.floor(Math.random() * possible_hands.length)]; //選択した手で盤面を更新\n\n      squares[action_hand] = this.state.xIsNext ? 'X' : 'O';\n      history[history.length - 1].squares = squares;\n      this.setState({\n        history: history,\n        xIsNext: !this.state.xIsNext\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var history = this.state.history;\n      var current = history[history.length - 1];\n      var winner = this.calculateWinner(current.squares);\n      var status;\n\n      if (winner) {\n        status = 'Winner: ' + winner;\n      } else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n\n      var moves = history.length < 2 ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return _this2.jumpTo(0);\n        },\n        children: \"1\\u56DE\\u524D\\u3078\\u623B\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game\",\n        children: [style, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-board\",\n          children: /*#__PURE__*/_jsxDEV(Board, {\n            squares: current.squares,\n            onClick: function onClick(i) {\n              return _this2.handleClick(i);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: moves\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/home/anet/nextApp-2/componets/Game.js"],"names":["React","Board","style","props","state","history","squares","Array","fill","xIsNext","stepNumber","i","getCurrentBoard","caluculateWinner","slice","all_history","concat","length","shift","setState","comAction","current","lines","a","b","c","step","calculateWinner","possible_hands","hand","indexOf","push","action_hand","Math","floor","random","winner","status","moves","jumpTo","handleClick","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Board from './Board.js';\nimport style from '../static/Style';\n\n\nexport default class extends React.Component{\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            history: [{\n                squares:Array(9).fill(null),\n            }],\n            xIsNext: true,\n            stepNumber: 0,\n        };\n    }\n\n    async handleClick(i){\n        const squares = this.getCurrentBoard();\n        if(this.caluculateWinner(squares) || squares[i]){\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        \n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n\n        let all_history = history.concat([{\n            squares: squares\n        }])\n        if(all_history.length === 3){\n            all_history.shift();\n        }\n\n        await this.setState({\n            history: all_history,\n            stepNumber: all_history.length -1,\n            xIsNext: !this.state.xIsNext,\n        });\n        this.comAction(squares);\n    }\n\n    //盤面\n    getCurrentBoard(){\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        return squares;\n    }\n\n    calculateWinner(squares){\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        for(let i = 0; i < lines.length; i++){\n            const [a, b, c] = lines[i];\n            if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n                return squares[a];\n            }\n        }\n        return null;\n    }\n\n    jumpTo(step){\n        const xIsNext = step !== this.state.stepNumber ? !this.state.xIsNext : this.state.xIsNext;\n        this.setState({\n            stepNumber: step,\n            xIsNext\n        });\n    }\n\n    //com action\n    comAction(squares){\n        if(this.calculateWinner(squares)) return;\n        let history = this.state.history.slice(0, this.state.stepNumber + 1);\n\n        //空いているマスを取得\n        const possible_hands = [];\n        let hand = squares.indexOf(null);\n        while(hand !== -1){\n            possible_hands.push(hand);\n            hand = squares.indexOf(null, hand + 1);\n        }\n       \n        //空いているマスがなければ終了\n        if(possible_hands.length === 0)return;\n        //空いているマスのうちランダムで1マス取得\n        const action_hand = possible_hands[Math.floor(Math.random()*possible_hands.length)];\n\n        //選択した手で盤面を更新\n        squares[action_hand] = this.state.xIsNext ? 'X' : 'O';\n        history[history.length - 1].squares = squares;\n\n        this.setState({\n            history,\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n\n\n    render(){\n        const history = this.state.history;\n        const current = history[history.length - 1];\n        const winner = this.calculateWinner(current.squares);\n        let status;\n        if(winner){\n            status = 'Winner: ' + winner;\n        }else{\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n        const moves = history.length < 2 ? null :(\n            <button onClick={() => this.jumpTo(0)}>1回前へ戻る</button>\n        );\n    \n        return(\n            \n            <div className = \"game\">\n                {style}\n                <div className = \"game-board\">\n                    <Board \n                        squares = {current.squares}\n                        onClick={(i) => this.handleClick(i)}\n                    />\n                </div>\n                <div className = \"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                    <ol>{/* TODO */}</ol>\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}