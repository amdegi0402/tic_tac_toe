{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/anet/nextApp-2/componets/Game.js\";\nimport React from 'react';\nimport Board from './Board.js';\nimport style from '../static/Style';\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true,\n      stepNumber: 0\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (this.calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    let all_history = history.concat([{\n      squares: squares\n    }]);\n\n    if (all_history.length === 3) {\n      all_history.shift();\n    }\n\n    this.setState({\n      history: all_history,\n      stepNumber: all_history.length - 1,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  calculateWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  }\n\n  jumpTo(step) {\n    const xIsNext = step !== this.state.stepNumber ? !this.state.xIsNext : this.state.xIsNext;\n    this.setState({\n      stepNumber: step,\n      xIsNext\n    });\n  } //com action\n\n\n  comAction(squares) {\n    if (this.calculateWinner(squares)) return;\n    let history = this.state.history.slice(0, this.state.stepNumber + 1); //空いているマスを取得\n\n    const possible_hands = [];\n    let hand = squares.indexOf(null);\n\n    while (hand !== -1) {\n      possible_hands.push(hand);\n      hand = squares.indexOf(null, hand + 1);\n    } //空いているマスがなければ終了\n\n\n    if (possible_hands.length === 0) return; //空いているマスのうちランダムで1マス取得\n\n    const action_hand = possible[Math.floor(Math.random() * possible_hands.length)]; //選択した手で盤面を更新\n\n    squares[action_hand] = this.state.xIsNext ? 'X' : 'O';\n    history[history.length - 1].squares = squares;\n    this.setState({\n      history,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = this.calculateWinner(current.squares);\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    const moves = history.length < 2 ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => this.jumpTo(0),\n      children: \"1\\u56DE\\u524D\\u3078\\u623B\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [style, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/anet/nextApp-2/componets/Game.js"],"names":["React","Board","style","Component","constructor","props","state","history","squares","Array","fill","xIsNext","stepNumber","handleClick","i","slice","current","length","calculateWinner","all_history","concat","shift","setState","lines","a","b","c","jumpTo","step","comAction","possible_hands","hand","indexOf","push","action_hand","possible","Math","floor","random","render","winner","status","moves"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Board from './Board.js';\nimport style from '../static/Style';\n\n\nexport default class extends React.Component{\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            history: [{\n                squares:Array(9).fill(null),\n            }],\n            xIsNext: true,\n            stepNumber: 0,\n        };\n    }\n\n    handleClick(i){\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if(this.calculateWinner(squares) || squares[i]){\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n\n        let all_history = history.concat([{\n            squares: squares\n        }])\n        if(all_history.length === 3){\n            all_history.shift();\n        }\n\n        this.setState({\n            history: all_history,\n            stepNumber: all_history.length -1,\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n\n    calculateWinner(squares){\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        for(let i = 0; i < lines.length; i++){\n            const [a, b, c] = lines[i];\n            if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n                return squares[a];\n            }\n        }\n        return null;\n    }\n\n    jumpTo(step){\n        const xIsNext = step !== this.state.stepNumber ? !this.state.xIsNext : this.state.xIsNext;\n        this.setState({\n            stepNumber: step,\n            xIsNext\n        });\n    }\n\n    //com action\n    comAction(squares){\n        if(this.calculateWinner(squares)) return;\n        let history = this.state.history.slice(0, this.state.stepNumber + 1);\n\n        //空いているマスを取得\n        const possible_hands = [];\n        let hand = squares.indexOf(null);\n        while(hand !== -1){\n            possible_hands.push(hand);\n            hand = squares.indexOf(null, hand + 1);\n        }\n       \n        //空いているマスがなければ終了\n        if(possible_hands.length === 0)return;\n        //空いているマスのうちランダムで1マス取得\n        const action_hand = possible[Math.floor(Math.random()*possible_hands.length)];\n\n        //選択した手で盤面を更新\n        squares[action_hand] = this.state.xIsNext ? 'X' : 'O';\n        history[history.length - 1].squares = squares;\n\n        this.setState({\n            history,\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n\n\n    render(){\n        const history = this.state.history;\n        const current = history[history.length - 1];\n        const winner = this.calculateWinner(current.squares);\n        let status;\n        if(winner){\n            status = 'Winner: ' + winner;\n        }else{\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n        const moves = history.length < 2 ? null :(\n            <button onClick={() => this.jumpTo(0)}>1回前へ戻る</button>\n        );\n    \n        return(\n            \n            <div className = \"game\">\n                {style}\n                <div className = \"game-board\">\n                    <Board \n                        squares = {current.squares}\n                        onClick={(i) => this.handleClick(i)}\n                    />\n                </div>\n                <div className = \"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                    <ol>{/* TODO */}</ol>\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}